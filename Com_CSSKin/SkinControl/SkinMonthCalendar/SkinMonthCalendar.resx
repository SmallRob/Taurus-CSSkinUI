<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="CloseBtn.DownBack" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAATtJREFUOE+dzM8rRFEUB/CZYfg3lLKwsLGYxShK2dnZ2VnZ+FcQTUoppSyEIkuZ
        eNNgMGkiisn0/BgMvTfPG2Z3vO9p7um+22sWs/jUPed7zzeWrfzRwUOjI7iN4TFvVdlCi5pNZo5bLljM
        vdPhoxOCnS4ql4Ll/AcdlR2K96UY3rAU7EHNeo4bKcicflK27FK8Py0w68wMN1Kwcl6j46c6SwyMiXY7
        3EjBaqHGToIAEoMTkVSu/kvB2uWXyFU81jU0GaL2+l8pWC9+i7ztse7hqRC11/9Kwca1w86efZZMTUdS
        ufovBZsllwovPkuOzIh2O9xIwdaNSxevPvWMzgrMOjPDjRTs3Nbp6q1BveNzDG/YDvagZj3HjRTs3nlU
        rP6GYKeLyqVg7/6H7beo2WTmXGDZTX50wrKb9A8JwhS6czJbVgAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="CloseBtn.MouseBack" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAARJJREFUOE+dk7tOAlEQhhEEXoOExIKChoJCEk1M7Ozs7KhseDtABA0mPIKKGkSE
        jlsnu0ebw/xHZpyzbii2+JKd/5bsJpvqf4a2OdokAt0UHh5mJhHo/g5MjX1b/3hA08T5aiAk8dseFKoO
        PIM+6YBv7aMjA3iX1xUFiscCbk3U42/nBu7peCERpI9OhX0aOjJwNwkdUiidx8I+52WgNwmEIQVApnzh
        wbrOykD3IxCGSwoSh5VLD9Z1VgZux4HjmQIgW72KhX3Oy0BnvLFPS+PI1urCPg2dv4F3GlgYmzu5FnBr
        oh46/wbyZw0Hl25IB3xr3xtoE49z4wFNE+fLQGv05Wjv4DtK1HcDg91flYTBzNgtPx0thkmOpmwAAAAA
        SUVORK5CYII=
</value>
  </data>
  <data name="CloseBtn.NormlBack" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAAOtJREFUOE+djLsOAWEQhd29hkSiUGgUChISiU6n06k03k6v8BgKrGvhfoktrDXn
        l3/MrI1iiy+Zc86cExvNHv5wco8EujEc09MzEuiagdnZ83cPDTxJWP4zEM9VDPJJlmWuBuYk9njIVxlo
        STBDhweci+cfyASJQoP556GjBtRIsRWKLKuBBQmLfUqW2grry18eWJKwHOkJpModhfXlLw+srp7h6H5I
        V7qh2Nz+qwEu13rMP08NrEmcyMzU+wy0JJihwwMbEmcys82BATeAb7NgDv87cHuRqYEnCct5YEsiCmZg
        7LjmiMLYcf03m21MdHJSxHIAAAAASUVORK5CYII=
</value>
  </data>
</root>